server:
  port: 9000
eureka:
  client:
    healthcheck:
      enabled: true
    serviceUrl:
      defaultZone: http://user:admin@localhost:8761/eureka
  instance:
      instance-id: ${spring.application.name}:${spring.application.instance_id:${server.port}}}
      prefer-ip-address: true
spring:
  application:
    name: microservice-gateway-zuul
  cloud:
    config:
      profile: dev
      #uri: http://localhost:8888/ # http://localhost:8088/   microservice-config-server
      label: master
      discovery:
        service-id: microservice-config-server #发现的配置服务名称 建议使用
  #profiles: dev,test,prod  #默认使用 ${spring.application.name}-${profiles}
zuul:         #路由器和过滤器配置
  routes:
    users:    #让zuul方向代理微服务，路径是/user/** users只要是唯一的就行(路由Id)，可随意写
      path: /user/**      #url配置
      serviceId: microservice-privider-user  #发现的服务名称
      sensitiveHeaders: Cookie,Set-Cookie,Authorization #设置敏感的标题（现在的值为默认）
      stripPrefix: false #局部是否携带前缀
    movies-ribbon:
      path: /movie-ribbon/**
      serviceId: microservice-customer-movie-ribbon
      #url: forward:/movies  #转发到/movies
      sensitiveHeaders: Cookie,Set-Cookie,Authorization #设置敏感的标题（现在的值为默认）
      stripPrefix: false #局部是否携带前缀
    movies:
      path: /movie/**
      serviceId:  microservice-web-service
      stripPrefix: false
    legacy:     #除配置的路由以外其他全部匹配
      path: /**
      url: www.baidu.com
  #strip-prefix: false #全局携带前缀
  #prefix: /api  #全局携带前缀
  ignored-services: "/**/view/**" #除了配置的路由以外其他全部被忽略
ribbon:           #
  eureka:
    enabled: true
#  ConnectTimeout: 3000
#  ReadTimeout: 60000
microservice-privider-user:   #服务器端配置负载均衡
  ribbon:
    NFLoadBalancerRuleClassName: com.netflix.loadbalancer.RandomRule #随机 支持多种负载均衡：轮询、随机、RoundRobinRule、高可用等
    #listOfServices: http://localhost:9021/ #禁用eureka条件下,配置rubbon能访问的服务节点,多个以“，”隔开
# To set thread isolation to SEMAPHORE 将线程隔离设置为SEMAPHORE
hystrix:
  command:
    default:
      execution:
        thread:
          timeoutInMilliseconds: 60000
        isolation:
          strategy: SEMAPHORE
endpoints:      #路由端点列表  /routes GET:返回所有映射路由的列表，POST：强制刷新现在的路由列表
  routes:
    enabled: true
management:     #免认证登录
  security:
    enabled: false
logging:        #日志级别
  level:
    com.netfilx: debug
