server:
  port: 9000
eureka:
  client:
    healthcheck:
      enabled: true
    serviceUrl:
      defaultZone: http://user:admin@localhost:8761/eureka
  instance:
      instance-id: ${spring.application.name}:${spring.application.instance_id:${server.port}}}
      prefer-ip-address: true
spring:
  application:
    name: microservice-gateway-zuul
zuul:         #路由器和过滤器配置
  routes:
    users:    #让zuul方向代理微服务，路径是/user/** users只要是唯一的就行，可随意写
      path: /user/**      #url配置
      serviceId: microservice-privider-user  #发现的服务名称
      sensitiveHeaders: Cookie,Set-Cookie,Authorization #设置敏感的标题（现在的值为默认）
      stripPrefix: false #是否携带前缀
    movies:
      path: /movie/**
      serviceId: microservice-customer-movie-ribbon
      sensitiveHeaders: Cookie,Set-Cookie,Authorization #设置敏感的标题（现在的值为默认）
      stripPrefix: false #是否携带前缀
  #ignored-services: '*' #除了配置的路由以外其他全部被忽略
ribbon:           #禁用ribbon中的eureka
  eureka:
    eable: false
microservice-privider-user:   #服务器端配置负载均衡
  ribbon:
    NFLoadBalancerRuleClassName: com.netflix.loadbalancer.RandomRule #随机 支持多种负载均衡：轮询、随机、RoundRobinRule、高可用等
    #listOfServices: http://localhost:9021/ #禁用eureka条件下,配置rubbon能访问的服务节点,多个以“，”隔开
# To set thread isolation to SEMAPHORE 将线程隔离设置为SEMAPHORE
hystrix:
  command:
    default:
      execution:
        isolation:
          strategy: SEMAPHORE
endpoints:      #路由端点列表  /routes GET:返回所有映射路由的列表，POST：强制刷新现在的路由列表
  routes:
    enabled: true
management:     #免认证登录
  security:
    enabled: false
logging:
  level:
    com.netfilx: debug